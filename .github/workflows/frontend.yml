name: Build and Test

on:
  workflow_dispatch:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  conda:
    name: Setup conda environment
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Cache conda env
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}
        id: cache

      - name: Install requirements
        shell: bash -l {0}
        run: pip install --upgrade --upgrade-strategy eager -r requirements.txt -e .
        if: steps.cache.outputs.cache-hit != 'true'

  node:
    name: Install npm dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '12'

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: ./frontend/node_modules
          key: node-modules-${{ hashFiles('./frontend/package-lock.json') }}

      - name: Install dependencies
        working-directory: ./frontend
        run: npm install
  frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    needs: [ conda, node ]
    steps:
      - name: Checking out repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Cache conda env
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}
        id: cache

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '12'
      - name: Get node from cache
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: ./frontend/node_modules
          key: node-modules-${{ hashFiles('./frontend/package-lock.json') }}
      - name: Building react
        working-directory: ./frontend
        shell: bash -l {0}
        run: npm run build
      - name: Building dash component
        working-directory: ./frontend
        shell: bash -l {0}
        run: python -m build --sdist --wheel --outdir dist/;
      - name: Test usage.py
        working-directory: ./frontend
        shell: bash -l {0}
        run: |
          python usage.py &
          PID=$!
          echo $PID
          sleep 5s
          kill -9 $PID
      - name: Upload frontend to GitHub
        uses: actions/upload-artifact@v2
        with:
          name: Frontend
          path: frontend/dist/*
  backend:
    name: Backend
    runs-on: ubuntu-latest
    needs: conda
    steps:
      - name: Checking out repository
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Cache conda env
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}
        id: cache
      - name: Run Tests
        shell: bash -l {0}
        run: PYTHONPATH=. pytest tests/test
      - name: Build package
        shell: bash -l {0}
        run: python -m build --sdist --wheel --outdir dist/;

      - name: Upload backend to GitHub
        uses: actions/upload-artifact@v2
        with:
          name: Backend
          path: dist/*
  publish:

    runs-on: ubuntu-latest
    needs: [ backend, frontend ]
    steps:
      - name: Checking out repository
        uses: actions/checkout@v2

