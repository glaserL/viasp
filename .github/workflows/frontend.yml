name: Build and Test

on:
  workflow_dispatch:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  conda:
    name: Setup conda environment
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set cache date
        run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          activate-environment: anaconda-client-env
          use-mamba: true

      - name: Cache conda env
        uses: actions/cache@v2
        with:
          path: /usr/share/miniconda3/envs/anaconda-client-env
          key: conda-${{ hashFiles('environment.yml') }}-${{ env.DATE }}-${{ env.CACHE_NUMBER }}
        env:
          # Increase this value to reset cache if etc/example-environment.yml has not changed
          CACHE_NUMBER: 0
        id: cache

      - name: Update environment
        run: mamba env update -n anaconda-client-env -f environment.yml
        if: steps.cache.outputs.cache-hit != 'true'

  node:
    name: Install npm dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '12'

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: ./frontend/node_modules
          key: node-modules-${{ hashFiles('./frontend/package-lock.json') }}

      - name: Install dependencies
        working-directory: ./frontend
        run: npm install
  build:
    name: Build Frontend
    runs-on: ubuntu-latest
    needs: [ conda, node ]
    steps:
      - name: Checking out repository
        uses: actions/checkout@v2

      - name: Set cache date
        run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          activate-environment: anaconda-client-env
          use-mamba: true

      - name: Cache conda env
        uses: actions/cache@v2
        with:
          path: /usr/share/miniconda3/envs/anaconda-client-env
          key: conda-${{ hashFiles('environment.yml') }}-${{ env.DATE }}-${{ env.CACHE_NUMBER }}
        env:
          CACHE_NUMBER: 0
        id: cache

      - name: Update environment
        run: mamba env update -n anaconda-client-env -f environment.yml
        if: steps.cache.outputs.cache-hit != 'true'
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '12'
      - name: Get node from cache
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: ./frontend/node_modules
          key: node-modules-${{ hashFiles('./frontend/package-lock.json') }}
      - name: Building react
        working-directory: ./frontend
        run: npm run build
      - name: Building dash component
        working-directory: ./frontend
        shell: bash -l {0}
        run: python -m build --sdist --wheel --outdir dist/;




